# Dependencies
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install

# Builder - Constructs the app
FROM node:21-alpine3.19 as build

# Argument sent from docker-compose.yml for app building-time
ARG ORDERS_DATABASE_URL
ENV DATABASE_URL=$ORDERS_DATABASE_URL

# Imprimir el arg para ver el valor de ORDERS_DATABASE_URL
# RUN echo "database_url ::: $ORDERS_DATABASE_URL";

WORKDIR /usr/src/app

# Copy from deps, node modules
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copy the app source code
COPY . .

RUN npx prisma migrate deploy
RUN npx prisma generate

# RUN npm run test?
RUN npm run build

# Run only production dependencies
RUN npm ci -f --only=production && npm cache clean --force

# Create the Docker final image
FROM node:21-alpine3.19 as prod
WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

# Copy DIST folder
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

# Creates a user named "node" for less privileges
USER node 

EXPOSE 3000
CMD [ "node", "dist/main.js" ]